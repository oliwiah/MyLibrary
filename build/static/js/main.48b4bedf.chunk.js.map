{"version":3,"sources":["images/emptyCover.png","requests/BooksAPI.js","components/ShelfChanger.js","components/Book.js","components/Search.js","components/BookShelf.js","components/BookList.js","components/PageNotFound.js","components/Loader.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","ShelfChanger","props","changeShelf","currShelf","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","value","err","return","react_default","a","createElement","className","onChange","event","target","defaultValue","disabled","Book","bookCover","imageLinks","thumbnail","emptyCover","bookTitle","title","key","style","width","height","backgroundImage","ShelfChanger_ShelfChanger","authors","map","author","Search","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","searchValue","searchResults","emptySearch","getBook","setState","BooksAPI","trim","inherits","createClass","_this$props","_this$state","react_router_dom","to","type","placeholder","Book_Book","React","Component","BookShelf","BookList","name","booksByShelf","filter","BookShelf_BookShelf","PageNotFound","variant","Loader","BooksApp","currBook","prevState","_this2","_this3","react_router","path","render","Search_Search","exact","BookList_BookList","component","Loader_Loader","ReactDOM","components_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4PCClCC,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,GAAD,OACpBd,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,SCzCVC,EAAe,SAACC,GAAU,IAC3BpB,EAA6BoB,EAA7BpB,KAAMkB,EAAuBE,EAAvBF,MAAOG,EAAgBD,EAAhBC,YAIjBC,EAAY,OALmBC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAOnC,QAAAC,EAAAC,EAAoBV,EAApBW,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA2B,KAAlBU,EAAkBN,EAAAO,MACvB,GAAID,EAAQ7B,KAAOJ,EAAKI,GAAI,CACxBkB,EAAYW,EAAQhC,MACpB,QAV2B,MAAAkC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAcnC,OACIY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQE,SAbM,SAACC,GAAD,OAAWrB,EAAYrB,EAAM0C,EAAMC,OAAOT,QAavBU,aAActB,GAC3Ce,EAAAC,EAAAC,cAAA,UAAQL,MAAM,OAAOW,UAAQ,GAA7B,cAGAR,EAAAC,EAAAC,cAAA,UAAQL,MAAM,oBAAd,qBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,cAAd,gBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,QAAd,QACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,QAAd,4BCrBHY,EAAO,SAAC1B,GAAU,IACnBpB,EAAiCoB,EAAjCpB,KAAMkB,EAA2BE,EAA3BF,MAAOG,EAAoBD,EAApBC,YAAajB,EAAOgB,EAAPhB,GAC5B2C,EACF/C,EAAKgD,YAAchD,EAAKgD,WAAWC,UAAYjD,EAAKgD,WAAWC,UAAYC,IACzEC,EAAYnD,EAAKoD,MAAQpD,EAAKoD,MAAQ,sBAE5C,OACIf,EAAAC,EAAAC,cAAA,MAAIc,IAAKjD,GACLiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,aACVc,MAAO,CACHC,MAAO,IACPC,OAAQ,IACRC,gBAAe,OAAAtD,OAAS4C,EAAT,QAGvBV,EAAAC,EAAAC,cAACmB,EAAD,CAAc1D,KAAMA,EAAMkB,MAAOA,EAAOG,YAAaA,KAEzDgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcW,GAC5BnD,EAAK2D,SACF3D,EAAK2D,QAAQC,IAAI,SAACC,EAAQzD,GAAT,OACbiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAea,IAAKjD,GAC9ByD,QCvBhBC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAA6D,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAA3D,OAAAoE,EAAA,EAAApE,CAAA6D,MAAAH,EAAA1D,OAAAqE,EAAA,EAAArE,CAAAwD,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAhE,OAAAoE,MACIO,MAAQ,CACJC,YAAa,GACbC,cAAe,GACfC,aAAa,GAJrBhB,EAOIiB,QAAU,SAACxC,GACP,IAAMqC,EAAcrC,EAAMC,OAAOT,MACjC+B,EAAKkB,SAAS,CAAEJ,gBAEZA,EACAK,EAAgBL,EAAYM,QAAQzE,KAAK,SAACM,GACtCA,EAAMoD,OAAS,EACTL,EAAKkB,SAAS,CACVH,cAAe9D,EACf+D,aAAa,IAEjBhB,EAAKkB,SAAS,CACVH,cAAe,GACfC,aAAa,MAI3BhB,EAAKkB,SAAS,CACVH,cAAe,GACfC,aAAa,KA1B7BhB,EAAA,OAAA3D,OAAAgF,EAAA,EAAAhF,CAAAwD,EAAAC,GAAAzD,OAAAiF,EAAA,EAAAjF,CAAAwD,EAAA,EAAAT,IAAA,SAAAnB,MAAA,WA+Ba,IAAAsD,EAC0BrB,KAAK/C,MAA5BF,EADHsE,EACGtE,MAAOG,EADVmE,EACUnE,YADVoE,EAE+CtB,KAAKW,MAAjDC,EAFHU,EAEGV,YAAaC,EAFhBS,EAEgBT,cAAeC,EAF/BQ,EAE+BR,YAEpC,OACI5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMlD,UAAU,eAAemD,GAAG,KAAlC,SAGAtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SACIqD,KAAK,OACLC,YAAY,4BACZ3D,MAAO6C,EACPtC,SAAU0B,KAAKe,YAI3B7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVwC,GAAiBD,GACd1C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTwC,EAAcpB,IAAI,SAAC5D,EAAMI,GAAP,OACfiC,EAAAC,EAAAC,cAACuD,EAAD,CACI9F,KAAMA,EACNkB,MAAOA,EACPG,YAAaA,EACbgC,IAAKrD,EAAKI,QAKzB6E,GAAe5C,EAAAC,EAAAC,cAAA,mEACdwC,IAAgBE,GACd5C,EAAAC,EAAAC,cAAA,oEAjExBuB,EAAA,CAA4BiC,IAAMC,WCFrBC,EAAY,SAAC7E,GAAU,IACxBF,EAAuBE,EAAvBF,MAAOG,EAAgBD,EAAhBC,YAEf,OACIgB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTtB,EAAM0C,IAAI,SAAC5D,EAAMI,GAAP,OACPiC,EAAAC,EAAAC,cAACuD,EAAD,CAAM9F,KAAMA,EAAMkB,MAAOA,EAAOG,YAAaA,EAAagC,IAAKjD,QCNlE8F,EAAW,SAAC9E,GAAU,IACvBF,EAAuBE,EAAvBF,MAAOG,EAAgBD,EAAhBC,YAOf,OACIgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAPH,CACZ,CAAE2D,KAAM,mBAAoB/C,MAAO,qBACnC,CAAE+C,KAAM,aAAc/C,MAAO,gBAC7B,CAAE+C,KAAM,OAAQ/C,MAAO,SAKVQ,IAAI,SAAC3D,EAAOG,GACjB,IAAMgG,EAAelF,EAAMmF,OAAO,SAACrG,GAAD,OAAUA,EAAKC,QAAUA,EAAMkG,OACjE,OACI9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYa,IAAKjD,GAC5BiC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBvC,EAAMmD,OACvCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAC+D,EAAD,CAAWpF,MAAOkF,EAAc/E,YAAaA,EAAagC,IAAKjD,UChB9EmG,EAAe,kBACxBlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,SACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,8CACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBgE,QAAQ,mBACvCnE,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMlD,UAAU,eAAemD,GAAG,KAAlC,qBCNCc,EAAS,kBAClBpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WCiERkE,oNA9DX5B,MAAQ,CACJ5D,MAAO,MAUXG,YAAc,SAACsF,EAAU1G,GACrBmF,EAAgBuB,EAAU1G,GAAOW,KAAK,WAClC+F,EAAS1G,MAAQA,EACjBgE,EAAKkB,SAAS,SAACyB,GAAD,MAAgB,CAC1B1F,MAAO0F,EAAU1F,MAAMmF,OAAO,SAACrG,GAAD,OAAUA,EAAKI,KAAOuG,EAASvG,KAAID,OAAOwG,4FARhE,IAAAE,EAAA1C,KRGtBjE,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,QQJGN,KAAK,SAACM,GAAD,OAAW2F,EAAK1B,SAAS,CAAEjE,6CAY7C,IAAA4F,EAAA3C,KACGjD,EAAUiD,KAAKW,MAAf5D,MAER,OACImB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVtB,EAAMoD,OACHjC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACIrD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,KACI1E,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACIC,KAAK,UACLC,OAAQ,kBACJ5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAQhG,MAAOA,EAAOG,YAAayF,EAAKzF,iBAGhDgB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACII,OAAK,EACLH,KAAK,IACLC,OAAQ,kBACJ5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAC6E,EAAD,CAAUlG,MAAOA,EAAOG,YAAayF,EAAKzF,cAC1CgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,WACLtD,EAAAC,EAAAC,cAAA,qCAMpBF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,KAAK,IAAIK,UAAWd,MAInClE,EAAAC,EAAAC,cAAC+E,EAAD,cAxDGvB,IAAMC,kBCJ7BuB,IAASN,OAAO5E,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.48b4bedf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emptyCover.9fd03e55.png\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\n\nexport const ShelfChanger = (props) => {\n    const { book, books, changeShelf } = props;\n\n    const onShelfChange = (event) => changeShelf(book, event.target.value);\n\n    let currShelf = 'none';\n\n    for (let element of books) {\n        if (element.id === book.id) {\n            currShelf = element.shelf;\n            break;\n        }\n    }\n\n    return (\n        <div className=\"book-shelf-changer\">\n            <select onChange={onShelfChange} defaultValue={currShelf}>\n                <option value=\"move\" disabled>\n                    Move to...\n                </option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n            </select>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ShelfChanger } from './ShelfChanger';\nimport emptyCover from '../images/emptyCover.png';\n\nexport const Book = (props) => {\n    const { book, books, changeShelf, id } = props;\n    const bookCover =\n        book.imageLinks && book.imageLinks.thumbnail ? book.imageLinks.thumbnail : emptyCover;\n    const bookTitle = book.title ? book.title : 'Title not Available';\n\n    return (\n        <li key={id}>\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div\n                        className=\"book-cover\"\n                        style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(${bookCover})`,\n                        }}\n                    />\n                    <ShelfChanger book={book} books={books} changeShelf={changeShelf} />\n                </div>\n                <div className=\"book-title\">{bookTitle}</div>\n                {book.authors &&\n                    book.authors.map((author, id) => (\n                        <div className=\"book-authors\" key={id}>\n                            {author}\n                        </div>\n                    ))}\n            </div>\n        </li>\n    );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../requests/BooksAPI';\nimport { Book } from './Book';\n\nexport class Search extends React.Component {\n    state = {\n        searchValue: '',\n        searchResults: [],\n        emptySearch: false,\n    };\n\n    getBook = (event) => {\n        const searchValue = event.target.value;\n        this.setState({ searchValue });\n\n        if (searchValue) {\n            BooksAPI.search(searchValue.trim()).then((books) => {\n                books.length > 0\n                    ? this.setState({\n                          searchResults: books,\n                          emptySearch: false,\n                      })\n                    : this.setState({\n                          searchResults: [],\n                          emptySearch: true,\n                      });\n            });\n        } else {\n            this.setState({\n                searchResults: [],\n                emptySearch: true,\n            });\n        }\n    };\n\n    render() {\n        const { books, changeShelf } = this.props;\n        const { searchValue, searchResults, emptySearch } = this.state;\n\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\">\n                        Close\n                    </Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by title or author\"\n                            value={searchValue}\n                            onChange={this.getBook}\n                        />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    {searchResults && searchValue && (\n                        <ol className=\"books-grid\">\n                            {searchResults.map((book, id) => (\n                                <Book\n                                    book={book}\n                                    books={books}\n                                    changeShelf={changeShelf}\n                                    key={book.id}\n                                />\n                            ))}\n                        </ol>\n                    )}\n                    {emptySearch && <h3>We do not have the book which matches these criteria</h3>}\n                    {!searchValue && !emptySearch && (\n                        <h3>You can search the book by using the seach input</h3>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Book } from './Book';\n\nexport const BookShelf = (props) => {\n    const { books, changeShelf } = props;\n\n    return (\n        <ol className=\"books-grid\">\n            {books.map((book, id) => (\n                <Book book={book} books={books} changeShelf={changeShelf} key={id} />\n            ))}\n        </ol>\n    );\n};\n","import React from 'react';\nimport { BookShelf } from './BookShelf';\n\nexport const BookList = (props) => {\n    const { books, changeShelf } = props;\n    const shelves = [\n        { name: 'currentlyReading', title: 'Currently Reading' },\n        { name: 'wantToRead', title: 'Want to Read' },\n        { name: 'read', title: 'Read' },\n    ];\n\n    return (\n        <div className=\"list-books-content\">\n            {shelves.map((shelf, id) => {\n                const booksByShelf = books.filter((book) => book.shelf === shelf.name);\n                return (\n                    <div className=\"bookshelf\" key={id}>\n                        <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n                        <div className=\"bookshelf-books\">\n                            <BookShelf books={booksByShelf} changeShelf={changeShelf} key={id} />\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const PageNotFound = () => (\n    <div className=\"screen404\">\n        <p className=\"heading\">OOPS!</p>\n        <p className=\"paragraph\">We can't find the page you're looking for!</p>\n        <button className=\"homePageButton\" variant=\"outline-primary\">\n            <Link className=\"homepageLink\" to=\"/\">\n                Visit homepage\n            </Link>\n        </button>\n    </div>\n);\n","import React from 'react';\n\nexport const Loader = () => (\n    <div className=\"spinner\">\n        <div className=\"s s1\" />\n        <div className=\"s s2\" />\n        <div className=\"s s3\" />\n        <div className=\"s s4\" />\n    </div>\n);\n","import React from 'react';\nimport { Route, Switch, BrowserRouter, Link } from 'react-router-dom';\nimport * as BooksAPI from '../requests/BooksAPI';\nimport { Search } from './Search';\nimport { BookList } from './BookList';\nimport { PageNotFound } from './PageNotFound';\nimport { Loader } from './Loader';\nimport '../styles/App.css';\n\nclass BooksApp extends React.Component {\n    state = {\n        books: [],\n    };\n\n    // componentDidMount is deprecated but in order to use hooks,\n    // I would need to upgrade React version and I did not know\n    // whether it is acceptable\n    componentDidMount() {\n        BooksAPI.getAll().then((books) => this.setState({ books }));\n    }\n\n    changeShelf = (currBook, shelf) => {\n        BooksAPI.update(currBook, shelf).then(() => {\n            currBook.shelf = shelf;\n            this.setState((prevState) => ({\n                books: prevState.books.filter((book) => book.id !== currBook.id).concat(currBook),\n            }));\n        });\n    };\n\n    render() {\n        const { books } = this.state;\n\n        return (\n            <div className=\"app\">\n                {books.length ? (\n                    <BrowserRouter>\n                        <Switch>\n                            <Route\n                                path=\"/search\"\n                                render={() => (\n                                    <Search books={books} changeShelf={this.changeShelf} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={() => (\n                                    <div className=\"list-books\">\n                                        <div className=\"list-books-title\">\n                                            <h1>MyReads</h1>\n                                        </div>\n                                        <BookList books={books} changeShelf={this.changeShelf} />\n                                        <div className=\"open-search\">\n                                            <Link to=\"/search\">\n                                                <button>Search a book</button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                )}\n                            />\n                            <Route path=\"*\" component={PageNotFound} />\n                        </Switch>\n                    </BrowserRouter>\n                ) : (\n                    <Loader />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default BooksApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}